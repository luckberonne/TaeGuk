---
interface Props {
  message: string;
  type?: 'info' | 'warning' | 'success' | 'error';
  dismissible?: boolean;
}

const { 
  message, 
  type = 'info',
  dismissible = true 
} = Astro.props;

const bgColors = {
  info: 'bg-blue-50 border-blue-200',
  warning: 'bg-yellow-50 border-yellow-200',
  success: 'bg-green-50 border-green-200',
  error: 'bg-red-50 border-red-200'
};

const textColors = {
  info: 'text-blue-800',
  warning: 'text-yellow-800',
  success: 'text-green-800',
  error: 'text-red-800'
};

const icons = {
  info: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
  </svg>`,
  warning: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
  </svg>`,
  success: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
  </svg>`,
  error: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
  </svg>`
};
---

<div 
  id="banner" 
  class={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 border ${bgColors[type]} ${textColors[type]} px-4 py-3`} 
  role="alert"
>
  <div class="flex items-center max-w-7xl mx-auto">
    <span class="flex-shrink-0 mr-2" set:html={icons[type]} />
    <p class="text-sm font-medium flex-grow">
      {message}
    </p>
    {dismissible && (
      <button 
        type="button" 
        class={`ml-4 ${textColors[type]} hover:opacity-75 transition-opacity`}
        aria-label="Close"
      >
        <span class="sr-only">Close</span>
        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
        </svg>
      </button>
    )}
  </div>
</div>

<script>
  const banner = document.getElementById('banner');
  const closeButton = banner?.querySelector('button');
  let lastScrollTop = 0;

  // Función para ocultar/mostrar el banner según el scroll
  function handleScroll() {
    if (!banner) return;
    
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    
    if (scrollTop > lastScrollTop && scrollTop > 50) {
      // Scrolling down & passed threshold
      banner.style.transform = 'translateY(-100%)';
      document.documentElement.style.setProperty('--banner-height', '0px');
    } else {
      // Scrolling up or at top
      banner.style.transform = 'translateY(0)';
      document.documentElement.style.setProperty('--banner-height', banner.offsetHeight + 'px');
    }
    
    lastScrollTop = scrollTop;
  }

  // Cerrar banner al hacer click en el botón
  closeButton?.addEventListener('click', () => {
    banner?.remove();
    document.documentElement.style.setProperty('--banner-height', '0px');
  });

  // Establecer altura inicial del banner
  if (banner) {
    document.documentElement.style.setProperty('--banner-height', banner.offsetHeight + 'px');
  }

  // Agregar evento de scroll
  window.addEventListener('scroll', handleScroll, { passive: true });
</script>